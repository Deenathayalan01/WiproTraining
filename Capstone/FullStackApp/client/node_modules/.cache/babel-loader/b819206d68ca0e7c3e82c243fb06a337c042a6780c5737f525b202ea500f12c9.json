{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mikkalya\\\\Desktop\\\\FullStackAppReact\\\\ChatApp\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addMessage, setMessages } from '../store/chatSlice';\n// import { sendMessage, receiveMessages } from '../services/socketService';\n// import axios from 'axios';\n\n// const Chat = () => {\n//   const [text, setText] = useState('');\n//   const messages = useSelector((state) => state.chat.messages);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     axios.get('http://localhost:5000/api/messages') // Fetch chat history\n//       .then((res) => dispatch(setMessages(res.data)));\n\n//     receiveMessages((message) => {\n//       dispatch(addMessage(message));\n//     });\n//   }, [dispatch]);\n\n//   const handleSend = () => {\n//     const message = { text, sender: 'User' }; // Replace with actual user data\n//     sendMessage(message);\n//     setText('');\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         {messages.map((msg, index) => (\n//           <p key={index}><strong>{msg.sender}:</strong> {msg.text}</p>\n//         ))}\n//       </div>\n//       <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n//       <button onClick={handleSend}>Send</button>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage, setMessages } from '../store/chatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [text, setText] = useState('');\n  const messages = useSelector(state => state.chat.messages);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Use mock messages instead of API call\n    const mockMessages = [{\n      sender: 'Alice',\n      text: 'Hello!'\n    }, {\n      sender: 'Bob',\n      text: 'Hi, how are you?'\n    }];\n    dispatch(setMessages(mockMessages));\n  }, [dispatch]);\n  const handleSend = () => {\n    if (text.trim()) {\n      const message = {\n        sender: 'You',\n        text\n      };\n      dispatch(addMessage(message)); // Directly update Redux state\n      setText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column vh-100 bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-primary text-white py-3 text-center fw-bold\",\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto p-3\",\n      style: {\n        maxHeight: \"75vh\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`,\n          style: {\n            maxWidth: \"75%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"d-block fw-bold\",\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 bg-white border-top d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control me-2\",\n        placeholder: \"Type a message...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"2tbZ+FIioWERNxsLjAoZfuOU0SY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","addMessage","setMessages","jsxDEV","_jsxDEV","Chat","_s","text","setText","messages","state","chat","dispatch","mockMessages","sender","handleSend","trim","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","map","msg","index","maxWidth","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mikkalya/Desktop/FullStackAppReact/ChatApp/client/src/pages/Chat.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { addMessage, setMessages } from '../store/chatSlice';\r\n// import { sendMessage, receiveMessages } from '../services/socketService';\r\n// import axios from 'axios';\r\n\r\n// const Chat = () => {\r\n//   const [text, setText] = useState('');\r\n//   const messages = useSelector((state) => state.chat.messages);\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:5000/api/messages') // Fetch chat history\r\n//       .then((res) => dispatch(setMessages(res.data)));\r\n\r\n//     receiveMessages((message) => {\r\n//       dispatch(addMessage(message));\r\n//     });\r\n//   }, [dispatch]);\r\n\r\n//   const handleSend = () => {\r\n//     const message = { text, sender: 'User' }; // Replace with actual user data\r\n//     sendMessage(message);\r\n//     setText('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         {messages.map((msg, index) => (\r\n//           <p key={index}><strong>{msg.sender}:</strong> {msg.text}</p>\r\n//         ))}\r\n//       </div>\r\n//       <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\r\n//       <button onClick={handleSend}>Send</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage, setMessages } from '../store/chatSlice';\r\n\r\nconst Chat = () => {\r\n  const [text, setText] = useState('');\r\n  const messages = useSelector((state) => state.chat.messages);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Use mock messages instead of API call\r\n    const mockMessages = [\r\n      { sender: 'Alice', text: 'Hello!' },\r\n      { sender: 'Bob', text: 'Hi, how are you?' }\r\n    ];\r\n    dispatch(setMessages(mockMessages));\r\n  }, [dispatch]);\r\n\r\n  const handleSend = () => {\r\n    if (text.trim()) {\r\n      const message = { sender: 'You', text };\r\n      dispatch(addMessage(message)); // Directly update Redux state\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column vh-100 bg-light\">\r\n      {/* Chat Header */}\r\n      <div className=\"bg-primary text-white py-3 text-center fw-bold\">\r\n        Chat Room\r\n      </div>\r\n\r\n      {/* Chat Messages */}\r\n      <div className=\"flex-grow-1 overflow-auto p-3\" style={{ maxHeight: \"75vh\" }}>\r\n        {messages.map((msg, index) => (\r\n          <div \r\n            key={index} \r\n            className={`d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`}\r\n          >\r\n            <div className={`p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`} \r\n                 style={{ maxWidth: \"75%\" }}>\r\n              <small className=\"d-block fw-bold\">{msg.sender}</small>\r\n              {msg.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Input */}\r\n      <div className=\"p-3 bg-white border-top d-flex\">\r\n        <input \r\n          type=\"text\" \r\n          className=\"form-control me-2\" \r\n          placeholder=\"Type a message...\" \r\n          value={text} \r\n          onChange={(e) => setText(e.target.value)} \r\n        />\r\n        <button className=\"btn btn-primary\" onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}