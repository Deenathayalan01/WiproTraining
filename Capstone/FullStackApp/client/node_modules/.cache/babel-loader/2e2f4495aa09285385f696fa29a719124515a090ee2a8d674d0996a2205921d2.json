{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mikkalya\\\\Desktop\\\\FullStackAppReact\\\\ChatApp\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect, useRef } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addMessage } from '../store/chatSlice';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const Chat = () => {\n//   const [text, setText] = useState('');\n//   const messages = useSelector((state) => state.chat.messages);\n//   const dispatch = useDispatch();\n//   const chatEndRef = useRef(null);\n\n//   useEffect(() => {\n//     // Auto-scroll to latest message\n//     chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSend = () => {\n//     if (text.trim()) {\n//       const message = { sender: 'You', text };\n//       dispatch(addMessage(message));\n//       setText('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"d-flex flex-column vh-100 bg-light\">\n//       {/* Chat Header */}\n//       <div className=\"bg-primary text-white py-3 text-center fw-bold\">\n//         Chat Room\n//       </div>\n\n//       {/* Chat Messages */}\n//       <div className=\"flex-grow-1 overflow-auto p-3\" style={{ maxHeight: \"75vh\" }}>\n//         {messages.length === 0 ? (\n//           <p className=\"text-muted text-center mt-5\">Start a conversation...</p>\n//         ) : (\n//           messages.map((msg, index) => (\n//             <div \n//               key={index} \n//               className={`d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`}\n//             >\n//               <div className={`p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`} \n//                    style={{ maxWidth: \"75%\" }}>\n//                 <small className=\"d-block fw-bold\">{msg.sender}</small>\n//                 {msg.text}\n//               </div>\n//             </div>\n//           ))\n//         )}\n//         <div ref={chatEndRef} /> {/* Auto-scroll reference */}\n//       </div>\n\n//       {/* Chat Input */}\n//       <div className=\"p-3 bg-white border-top d-flex\">\n//         <input \n//           type=\"text\" \n//           className=\"form-control me-2\" \n//           placeholder=\"Type a message...\" \n//           value={text} \n//           onChange={(e) => setText(e.target.value)} \n//         />\n//         <button className=\"btn btn-primary\" onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\n// import { useState, useEffect, useRef } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// // Users with different background colors\n// const users = [\n//   { id: 1, name: \"Deenathayalan\", color: \"#FF5733\" },   // Orange\n//   { id: 2, name: \"Sameera\", color: \"#3498DB\" }, // Blue\n//   { id: 3, name: \"Naveen\", color: \"#2ECC71\" }, // Green\n//   { id: 4, name: \"Manivannan\", color: \"#9B59B6\" }  // Purple\n// ];\n\n// const Chat = () => {\n//   const [selectedUser, setSelectedUser] = useState(users[0]);\n//   const [messages, setMessages] = useState({});\n//   const [text, setText] = useState('');\n//   const chatEndRef = useRef(null);\n\n//   // Scroll to the bottom of chat\n//   useEffect(() => {\n//     chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   }, [messages]);\n\n//   // Handle sending messages\n//   const handleSend = () => {\n//     if (text.trim()) {\n//       setMessages((prevMessages) => ({\n//         ...prevMessages,\n//         [selectedUser.id]: [\n//           ...(prevMessages[selectedUser.id] || []),\n//           { sender: \"You\", text }\n//         ]\n//       }));\n//       setText(\"\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"d-flex vh-100\">\n//       {/* Sidebar */}\n//       <div className=\"bg-dark text-white p-3\" style={{ width: \"250px\" }}>\n//         <h5 className=\"text-center mb-3\">Users</h5>\n//         <ul className=\"list-unstyled\">\n//           {users.map((user) => (\n//             <li \n//               key={user.id} \n//               className={`p-2 mb-2 rounded d-flex align-items-center ${selectedUser.id === user.id ? 'border border-light' : ''}`}\n//               style={{ \n//                 cursor: 'pointer', \n//                 backgroundColor: user.color,\n//                 color: \"white\"\n//               }} \n//               onClick={() => setSelectedUser(user)}\n//             >\n//               <div className=\"px-3 py-1 rounded fw-bold\">\n//                 {user.name}\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Chat Section */}\n//       <div className=\"d-flex flex-column flex-grow-1 bg-light\">\n//         {/* Chat Header */}\n//         <div className=\"py-3 px-3 d-flex align-items-center\" style={{ backgroundColor: selectedUser.color, color: \"white\" }}>\n//           <h5 className=\"mb-0\">{selectedUser.name}</h5>\n//         </div>\n\n//         {/* Chat Messages */}\n//         <div className=\"flex-grow-1 overflow-auto p-3\" style={{ maxHeight: \"75vh\" }}>\n//           {messages[selectedUser.id]?.length === 0 ? (\n//             <p className=\"text-muted text-center mt-5\">Say hi to {selectedUser.name}...</p>\n//           ) : (\n//             messages[selectedUser.id]?.map((msg, index) => (\n//               <div key={index} className={`d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`}>\n//                 <div className={`p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`} style={{ maxWidth: \"75%\" }}>\n//                   <small className=\"d-block fw-bold\">{msg.sender}</small>\n//                   {msg.text}\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//           <div ref={chatEndRef} />\n//         </div>\n\n//         {/* Chat Input */}\n//         <div className=\"p-3 bg-white border-top d-flex\">\n//           <input \n//             type=\"text\" \n//             className=\"form-control me-2\" \n//             placeholder={`Message ${selectedUser.name}...`} \n//             value={text} \n//             onChange={(e) => setText(e.target.value)} \n//           />\n//           <button className=\"btn btn-primary\" onClick={handleSend}>Send</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport { useState, useEffect, useRef } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from \"../assets/chatapplogo.png\";\n\n// Users with different background colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  id: 1,\n  name: \"Deenathayalan\",\n  color: \"#FF5733\"\n},\n// Orange\n{\n  id: 2,\n  name: \"Sameera\",\n  color: \"#3498DB\"\n},\n// Blue\n{\n  id: 3,\n  name: \"Naveen\",\n  color: \"#2ECC71\"\n},\n// Green\n{\n  id: 4,\n  name: \"Manivannan\",\n  color: \"#9B59B6\"\n} // Purple\n];\nconst Chat = () => {\n  _s();\n  var _messages$selectedUse, _messages$selectedUse2;\n  const [selectedUser, setSelectedUser] = useState(users[0]);\n  const [messages, setMessages] = useState({});\n  const [text, setText] = useState('');\n  const chatEndRef = useRef(null);\n\n  // Scroll to the bottom of chat\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Handle sending messages\n  const handleSend = () => {\n    if (text.trim()) {\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [selectedUser.id]: [...(prevMessages[selectedUser.id] || []), {\n          sender: \"You\",\n          text\n        }]\n      }));\n      setText(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: \"250px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Chat Logo\",\n          style: {\n            width: \"80px\",\n            height: \"80px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center mb-3\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `p-2 mb-2 rounded d-flex align-items-center ${selectedUser.id === user.id ? 'border border-light' : ''}`,\n          style: {\n            cursor: 'pointer',\n            backgroundColor: user.color,\n            color: \"white\"\n          },\n          onClick: () => setSelectedUser(user),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-1 rounded fw-bold\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column flex-grow-1 bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center py-3 px-3\",\n        style: {\n          backgroundColor: selectedUser.color,\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Chat Logo\",\n          style: {\n            width: \"40px\",\n            height: \"40px\",\n            borderRadius: \"50%\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: selectedUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 overflow-auto p-3\",\n        style: {\n          maxHeight: \"75vh\"\n        },\n        children: [((_messages$selectedUse = messages[selectedUser.id]) === null || _messages$selectedUse === void 0 ? void 0 : _messages$selectedUse.length) === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted text-center mt-5\",\n          children: [\"Say hi to \", selectedUser.name, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this) : (_messages$selectedUse2 = messages[selectedUser.id]) === null || _messages$selectedUse2 === void 0 ? void 0 : _messages$selectedUse2.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`,\n            style: {\n              maxWidth: \"75%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"d-block fw-bold\",\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), msg.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-white border-top d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control me-2\",\n          placeholder: `Message ${selectedUser.name}...`,\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"dtavkooe1CL6CtfIcOIjlOwAnQg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","useRef","logo","jsxDEV","_jsxDEV","users","id","name","color","Chat","_s","_messages$selectedUse","_messages$selectedUse2","selectedUser","setSelectedUser","messages","setMessages","text","setText","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleSend","trim","prevMessages","sender","className","children","style","width","src","alt","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","map","user","cursor","backgroundColor","onClick","marginRight","maxHeight","length","msg","index","maxWidth","ref","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Mikkalya/Desktop/FullStackAppReact/ChatApp/client/src/pages/Chat.js"],"sourcesContent":["// import { useState, useEffect, useRef } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { addMessage } from '../store/chatSlice';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const Chat = () => {\r\n//   const [text, setText] = useState('');\r\n//   const messages = useSelector((state) => state.chat.messages);\r\n//   const dispatch = useDispatch();\r\n//   const chatEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     // Auto-scroll to latest message\r\n//     chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSend = () => {\r\n//     if (text.trim()) {\r\n//       const message = { sender: 'You', text };\r\n//       dispatch(addMessage(message));\r\n//       setText('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex flex-column vh-100 bg-light\">\r\n//       {/* Chat Header */}\r\n//       <div className=\"bg-primary text-white py-3 text-center fw-bold\">\r\n//         Chat Room\r\n//       </div>\r\n\r\n//       {/* Chat Messages */}\r\n//       <div className=\"flex-grow-1 overflow-auto p-3\" style={{ maxHeight: \"75vh\" }}>\r\n//         {messages.length === 0 ? (\r\n//           <p className=\"text-muted text-center mt-5\">Start a conversation...</p>\r\n//         ) : (\r\n//           messages.map((msg, index) => (\r\n//             <div \r\n//               key={index} \r\n//               className={`d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`}\r\n//             >\r\n//               <div className={`p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`} \r\n//                    style={{ maxWidth: \"75%\" }}>\r\n//                 <small className=\"d-block fw-bold\">{msg.sender}</small>\r\n//                 {msg.text}\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         )}\r\n//         <div ref={chatEndRef} /> {/* Auto-scroll reference */}\r\n//       </div>\r\n\r\n//       {/* Chat Input */}\r\n//       <div className=\"p-3 bg-white border-top d-flex\">\r\n//         <input \r\n//           type=\"text\" \r\n//           className=\"form-control me-2\" \r\n//           placeholder=\"Type a message...\" \r\n//           value={text} \r\n//           onChange={(e) => setText(e.target.value)} \r\n//         />\r\n//         <button className=\"btn btn-primary\" onClick={handleSend}>Send</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n// import { useState, useEffect, useRef } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// // Users with different background colors\r\n// const users = [\r\n//   { id: 1, name: \"Deenathayalan\", color: \"#FF5733\" },   // Orange\r\n//   { id: 2, name: \"Sameera\", color: \"#3498DB\" }, // Blue\r\n//   { id: 3, name: \"Naveen\", color: \"#2ECC71\" }, // Green\r\n//   { id: 4, name: \"Manivannan\", color: \"#9B59B6\" }  // Purple\r\n// ];\r\n\r\n// const Chat = () => {\r\n//   const [selectedUser, setSelectedUser] = useState(users[0]);\r\n//   const [messages, setMessages] = useState({});\r\n//   const [text, setText] = useState('');\r\n//   const chatEndRef = useRef(null);\r\n\r\n//   // Scroll to the bottom of chat\r\n//   useEffect(() => {\r\n//     chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   }, [messages]);\r\n\r\n//   // Handle sending messages\r\n//   const handleSend = () => {\r\n//     if (text.trim()) {\r\n//       setMessages((prevMessages) => ({\r\n//         ...prevMessages,\r\n//         [selectedUser.id]: [\r\n//           ...(prevMessages[selectedUser.id] || []),\r\n//           { sender: \"You\", text }\r\n//         ]\r\n//       }));\r\n//       setText(\"\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"d-flex vh-100\">\r\n//       {/* Sidebar */}\r\n//       <div className=\"bg-dark text-white p-3\" style={{ width: \"250px\" }}>\r\n//         <h5 className=\"text-center mb-3\">Users</h5>\r\n//         <ul className=\"list-unstyled\">\r\n//           {users.map((user) => (\r\n//             <li \r\n//               key={user.id} \r\n//               className={`p-2 mb-2 rounded d-flex align-items-center ${selectedUser.id === user.id ? 'border border-light' : ''}`}\r\n//               style={{ \r\n//                 cursor: 'pointer', \r\n//                 backgroundColor: user.color,\r\n//                 color: \"white\"\r\n//               }} \r\n//               onClick={() => setSelectedUser(user)}\r\n//             >\r\n//               <div className=\"px-3 py-1 rounded fw-bold\">\r\n//                 {user.name}\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       {/* Chat Section */}\r\n//       <div className=\"d-flex flex-column flex-grow-1 bg-light\">\r\n//         {/* Chat Header */}\r\n//         <div className=\"py-3 px-3 d-flex align-items-center\" style={{ backgroundColor: selectedUser.color, color: \"white\" }}>\r\n//           <h5 className=\"mb-0\">{selectedUser.name}</h5>\r\n//         </div>\r\n\r\n//         {/* Chat Messages */}\r\n//         <div className=\"flex-grow-1 overflow-auto p-3\" style={{ maxHeight: \"75vh\" }}>\r\n//           {messages[selectedUser.id]?.length === 0 ? (\r\n//             <p className=\"text-muted text-center mt-5\">Say hi to {selectedUser.name}...</p>\r\n//           ) : (\r\n//             messages[selectedUser.id]?.map((msg, index) => (\r\n//               <div key={index} className={`d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`}>\r\n//                 <div className={`p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`} style={{ maxWidth: \"75%\" }}>\r\n//                   <small className=\"d-block fw-bold\">{msg.sender}</small>\r\n//                   {msg.text}\r\n//                 </div>\r\n//               </div>\r\n//             ))\r\n//           )}\r\n//           <div ref={chatEndRef} />\r\n//         </div>\r\n\r\n//         {/* Chat Input */}\r\n//         <div className=\"p-3 bg-white border-top d-flex\">\r\n//           <input \r\n//             type=\"text\" \r\n//             className=\"form-control me-2\" \r\n//             placeholder={`Message ${selectedUser.name}...`} \r\n//             value={text} \r\n//             onChange={(e) => setText(e.target.value)} \r\n//           />\r\n//           <button className=\"btn btn-primary\" onClick={handleSend}>Send</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from \"../assets/chatapplogo.png\"; \r\n\r\n// Users with different background colors\r\nconst users = [\r\n  { id: 1, name: \"Deenathayalan\", color: \"#FF5733\" },   // Orange\r\n  { id: 2, name: \"Sameera\", color: \"#3498DB\" }, // Blue\r\n  { id: 3, name: \"Naveen\", color: \"#2ECC71\" }, // Green\r\n  { id: 4, name: \"Manivannan\", color: \"#9B59B6\" }  // Purple\r\n];\r\n\r\nconst Chat = () => {\r\n  const [selectedUser, setSelectedUser] = useState(users[0]);\r\n  const [messages, setMessages] = useState({});\r\n  const [text, setText] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  // Scroll to the bottom of chat\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Handle sending messages\r\n  const handleSend = () => {\r\n    if (text.trim()) {\r\n      setMessages((prevMessages) => ({\r\n        ...prevMessages,\r\n        [selectedUser.id]: [\r\n          ...(prevMessages[selectedUser.id] || []),\r\n          { sender: \"You\", text }\r\n        ]\r\n      }));\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex vh-100\">\r\n      {/* Sidebar */}\r\n      <div className=\"bg-dark text-white p-3\" style={{ width: \"250px\" }}>\r\n        <div className=\"text-center mb-3\">\r\n          <img src={logo} alt=\"Chat Logo\" style={{ width: \"80px\", height: \"80px\", borderRadius: \"50%\" }} />\r\n        </div>\r\n        <h5 className=\"text-center mb-3\">Users</h5>\r\n        <ul className=\"list-unstyled\">\r\n          {users.map((user) => (\r\n            <li \r\n              key={user.id} \r\n              className={`p-2 mb-2 rounded d-flex align-items-center ${selectedUser.id === user.id ? 'border border-light' : ''}`}\r\n              style={{ \r\n                cursor: 'pointer', \r\n                backgroundColor: user.color,\r\n                color: \"white\"\r\n              }} \r\n              onClick={() => setSelectedUser(user)}\r\n            >\r\n              <div className=\"px-3 py-1 rounded fw-bold\">\r\n                {user.name}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Chat Section */}\r\n      <div className=\"d-flex flex-column flex-grow-1 bg-light\">\r\n        {/* Chat Header with Logo */}\r\n        <div className=\"d-flex align-items-center py-3 px-3\" style={{ backgroundColor: selectedUser.color, color: \"white\" }}>\r\n          <img src={logo} alt=\"Chat Logo\" style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\", marginRight: \"10px\" }} />\r\n          <h5 className=\"mb-0\">{selectedUser.name}</h5>\r\n        </div>\r\n\r\n        {/* Chat Messages */}\r\n        <div className=\"flex-grow-1 overflow-auto p-3\" style={{ maxHeight: \"75vh\" }}>\r\n          {messages[selectedUser.id]?.length === 0 ? (\r\n            <p className=\"text-muted text-center mt-5\">Say hi to {selectedUser.name}...</p>\r\n          ) : (\r\n            messages[selectedUser.id]?.map((msg, index) => (\r\n              <div key={index} className={`d-flex mb-2 ${msg.sender === 'You' ? 'justify-content-end' : 'justify-content-start'}`}>\r\n                <div className={`p-2 rounded-3 ${msg.sender === 'You' ? 'bg-primary text-white' : 'bg-secondary text-white'}`} style={{ maxWidth: \"75%\" }}>\r\n                  <small className=\"d-block fw-bold\">{msg.sender}</small>\r\n                  {msg.text}\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n          <div ref={chatEndRef} />\r\n        </div>\r\n\r\n        {/* Chat Input */}\r\n        <div className=\"p-3 bg-white border-top d-flex\">\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control me-2\" \r\n            placeholder={`Message ${selectedUser.name}...`} \r\n            value={text} \r\n            onChange={(e) => setText(e.target.value)} \r\n          />\r\n          <button className=\"btn btn-primary\" onClick={handleSend}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,sCAAsC;AAC7C,OAAOC,IAAI,MAAM,2BAA2B;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAU,CAAC;AAAI;AACtD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC;AAAE;AAC9C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAU,CAAC;AAAE;AAC7C;EAAEF,EAAE,EAAE,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}